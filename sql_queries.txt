use betting;

CREATE TABLE users (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  -- Auto-incrementing primary key
  username VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  phone_number VARCHAR(255),
  email VARCHAR(100),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Set on insert
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Set on insert and update
  is_valid BOOLEAN NOT NULL,
  onboarder_name VARCHAR(255)
);

CREATE TABLE payout (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  -- Auto-incrementing primary key
  user_id INT NOT NULL,
  total_amount DOUBLE DEFAULT 0.0,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Set on insert
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Set on insert and update
  FOREIGN KEY (user_id) REFERENCES users(id)  -- Foreign key relationship with users table
);



CREATE TABLE cricket_money (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  -- Auto-incrementing primary key
  match_id INT NOT NULL,
  run_zero_money DOUBLE,
  run_one_money DOUBLE,
  run_two_money DOUBLE,
  run_three_money DOUBLE,
  run_four_money DOUBLE,
  run_five_money DOUBLE,
  run_six_money DOUBLE,
  wicket_money DOUBLE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Set on insert
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Set on insert and update
  FOREIGN KEY (match_id) REFERENCES cricket_matches(match_id)  -- Foreign key relationship with cricket_matches table
);



CREATE TABLE cricket_matches (
  match_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  -- Auto-incrementing primary key
  team_one VARCHAR(255) NOT NULL,
  team_two VARCHAR(255) NOT NULL,
  team_one_score VARCHAR(255),
  team_two_score VARCHAR(255),
  url VARCHAR(255),
  is_live_match BOOLEAN NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Set on insert
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Set on insert and update
);

